1. Make sure to add the helm "grafana" repo

PS C:\Users\Administrator> helm repo add grafana https://grafana.github.io/helm-charts
"grafana" has been added to your repositories
PS C:\Users\Administrator>
PS C:\Users\Administrator>
PS C:\Users\Administrator> helm repo list
NAME                    URL
prometheus-community    https://prometheus-community.github.io/helm-charts
stable                  https://charts.helm.sh/stable
grafana                 https://grafana.github.io/helm-charts
PS C:\Users\Administrator> helm repo update 
Hang tight while we grab the latest from your chart repositories...
...Successfully got an update from the "grafana" chart repository
PS C:\Users\Administrator>
PS C:\Users\Administrator> helm search repo grafana
NAME                                            CHART VERSION   APP VERSION    DESCRIPTION
grafana/grafana                                 6.1.16          7.3.5          The leading tool for querying and visualizing t...
stable/grafana                                  5.5.7           7.1.1          DEPRECATED - The leading tool for querying and ...
grafana/fluent-bit                              2.2.0           v2.1.0         Uses fluent-bit Loki go plugin for gathering lo...
grafana/loki                                    2.3.0           v2.1.0         Loki: like Prometheus, but for logs.
grafana/loki-canary                             0.2.0           2.1.0          Helm chart for Grafana Loki Canary
grafana/loki-distributed                        0.21.0          2.1.0          Helm chart for Grafana Loki in microservices mode
grafana/loki-stack                              2.3.0           v2.1.0         Loki: like Prometheus, but for logs.
grafana/promtail                                2.2.0           v2.1.0         Responsible for gathering logs and sending them...
prometheus-community/kube-prometheus-stack      12.8.1          0.44.0         kube-prometheus-stack collects Kubernetes manif...
prometheus-community/prometheus-druid-exporter  0.9.0           v0.8.0         Druid exporter to monitor druid metrics with Pr...
PS C:\Users\Administrator>

2. Install Grafana
kubectl create namespace grafana
helm install grafana grafana/grafana \
    --namespace grafana \
    --set persistence.storageClassName="gp2" \
    --set persistence.enabled=true \
    --set adminPassword='EKS!sAWSome' \
    --set datasources."datasources\.yaml".apiVersion=1 \
    --set datasources."datasources\.yaml".datasources[0].name=Prometheus \
    --set datasources."datasources\.yaml".datasources[0].type=prometheus \
    --set datasources."datasources\.yaml".datasources[0].url=http://prometheus-server.prometheus.svc.cluster.local \
    --set datasources."datasources\.yaml".datasources[0].access=proxy \
    --set datasources."datasources\.yaml".datasources[0].isDefault=true \
    --set service.type=LoadBalancer

**************** The output should be similar to the following:
NAME: grafana
LAST DEPLOYED: Tue Dec 29 12:49:49 2020
NAMESPACE: grafana
STATUS: deployed
REVISION: 1
NOTES:
    1. Get your 'admin' user password by running:

    kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

    2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:

        grafana.grafana.svc.cluster.local

        Get the Grafana URL to visit by running these commands in the same shell:
    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
            You can watch the status of by running 'kubectl get svc --namespace grafana -w grafana'
        export SERVICE_IP=$(kubectl get svc --namespace grafana grafana -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        http://$SERVICE_IP:80

    3. Login with the password from step 1 and the username: admin
****************

3. Check if Grafana is deployed properly
kubectl get all -n grafana

4. Get Grafana ELB url
The Grafana console URL will be the External-IP of the loadbalancer service from the ouptut of
the following commnand:
kubectl get svc --namespace grafana -w grafana

5. When logging in, use username "admin" and get password by running the following:
kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo


6. Grafana Dashboards for K8s:
https://grafana.com/grafana/dashboards?dataSource=prometheus&direction=desc&orderBy=reviewsCount

7. Uninstall Prometheus and Grafana
helm uninstall prometheus --namespace prometheus
helm uninstall grafana --namespace grafana
